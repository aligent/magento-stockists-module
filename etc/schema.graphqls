type Query {
    stockists (
        location: LocationRequest @doc(description: "Search request"),
        pageSize: Int = 20 @doc(description: "Number per page"),
        currentPage: Int = 1 @doc(description: "Current page")
    ): Stockists @resolver(class: "Aligent\\Stockists\\Model\\Resolver\\Stockists") @doc(description: "Retreive Stockists")
}

type Stockist @doc(description: "A stockist location entity") {
    id: Int,
    external_identifier: String,
    location: Location @resolver(class: "Aligent\\Stockists\\Model\\Resolver\\StockistLocation"),
    name: String,
    address: Address @resolver(class: "Aligent\\Stockists\\Model\\Resolver\\StockistAddress"),
    trading_hours: Hours @resolver(class: "Aligent\\Stockists\\Model\\Resolver\\StockistHours"),
    distance: Float,
    units: DistanceUnitsEnum
}

type Location @doc(description: "Geo-location coordinates") {
    lat: Float,
    lng: Float
    distance: Float
}

type Address @doc(description: "Street address of location") {
    street: String,
    city: String,
    postcode: String,
    region: String,
    country_code: String
    phone: String
}

type Hours @doc(description: "Opening hours") {
    monday: String,
    tuesday: String,
    wednesday: String,
    thursday: String,
    friday: String,
    saturday: String,
    sunday: String,
    public_holidays: String
}

enum DistanceUnitsEnum @doc(description: "Distance unit") {
    KM
    MI
}

type Stockists @doc(description: "Result of a stockist search query") {
    locations: [Stockist] @doc(description: "List of stockists"),
    page_info: SearchResultPageInfo @doc(description: "Page information"),
    total_count: Int @doc(description: "Total matching locations")
}

input LocationRequest @doc(description: "Request location (origin point and search radius)") {
    lat: Float @doc(description: "Latitude"),
    lng: Float @doc(description: "Longitude"),
    radius: Float @doc(description: "Search radius"),
    unit: DistanceUnitsEnum @doc(description: "Units of search radius")
}